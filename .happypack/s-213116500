'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loading = exports.yunique = exports.ysort = exports.fs = exports.getBreadcrumb = exports.getCurrent = exports.cloneObj = exports.resetObj = exports.toggleClass = exports.removeClass = exports.addClass = exports.hasClass = undefined;

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hasClass = exports.hasClass = function hasClass(target, cname) {
  return target.className.match(new RegExp('(\\s|^)' + cname + '(\\s|$)'));
};
var addClass = exports.addClass = function addClass(target, cname) {
  var nameArr = cname.split(' ');
  nameArr.map(function (v, k) {
    if (!!v && !hasClass(target, v)) {
      target.className += ' ' + v;
    }
  });
};
var removeClass = exports.removeClass = function removeClass(target, cname) {
  var nameArr = cname.split(' ');
  nameArr.map(function (v, k) {
    if (!!v && hasClass(target, v)) {
      // var reg=new RegExp('(\\s|^)'+v+'(\\s|$)');
      var reg = new RegExp('(\\s|^)' + v);
      target.className = target.className.replace(reg, '');
    }
  });
};
var toggleClass = exports.toggleClass = function toggleClass(target, cname) {
  if (hasClass(target, cname)) {
    removeClass(target, cname);
  } else {
    addClass(target, cname);
  }
};

var resetObj = exports.resetObj = function resetObj(obj) {
  var keys = (0, _keys2.default)(obj);
  for (var i = 0, j = keys.length; i < j; i++) {
    obj[keys[i]] = '';
  }
  return obj;
};

//对象赋值 深拷贝
var cloneObj = exports.cloneObj = function cloneObj(obj) {
  var str = '',
      newobj = obj.constructor === Array ? [] : {};
  if ((typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) !== 'object') {
    return;
  }
  /*else if(window.JSON){//浏览器支持json解析
    str=JSON.stringify(obj);
    newobj=JSON.pares(str);
  }*/
  else {
      for (var i in obj) {
        newobj[i] = (0, _typeof3.default)(obj[i]) === 'object' ? cloneObj(obj[i]) : obj[i];
      }
    }
  return newobj;
};

//返回顶部
/*export const backTop=(st)=>{
  let timer=setInterval(function(){
    if(st<=0){
      st=0;
      clearInterval(timer);
      return;
    }
    st-=50;
  },1);
};*/

//获取当前页面--menu
var getCurrent = exports.getCurrent = function getCurrent(menu, str) {
  if (str) {
    // 规定url书写规格。#/function/function1
    // str=str[0].slice(0,str[0].length-1);
    str = str[1];
    if (str.split('/').length == 2) {
      str = '#' + str;
    }
    menu.map(function (v, k) {
      if (v.subMenu && v.subMenu.length > 0) {
        (function () {
          var flag = false,
              ls = v.subMenu.length;
          v.subMenu.map(function (sv, sk) {
            if (sv.url == str) {
              /*data.url='#'+sv.url;
              data.subTitle=sv.title;
              data.level=2;*/
              flag = true;
              sv.selected = 'active';
            } else {
              sv.selected = '';
              var a = str.split('/');
              var url = '/' + a[a.length - 2];
              if (url == sv.url && !flag) {
                sv.selected = 'active';
                flag = true;
              }
            }
          });
          flag ? (
          // data.title=v.title,
          v.selMenu = 'active', v.open = 'open', v.toggleSlide = {
            height: ls * 32 + 16
          }) : (v.selMenu = '', v.open = '', v.toggleSlide = {
            height: 0
          });
        })();
      } else {
        if (v.url == str) {
          /*data.url=v.url;
          data.title=v.title;
          data.subTitle='';
          data.level=1;*/
          v.selMenu = 'active';
        } else {
          v.selMenu = '';
          !!v.subMenu && v.subMenu.map(function (sv, sk) {
            sv.selected = '';
          });
        }
      }
    });
  }
  return menu;
};
//获取当前页面--breadcrumb
var getBreadcrumb = exports.getBreadcrumb = function getBreadcrumb(menu, str) {
  if (str) {
    var _ret2 = function () {
      str = str[1];
      if (str.split('/').length == 2) {
        str = '#' + str;
      }
      var data = [],
          tmp = [],
          level = -1,
          f = false;
      //获取当前页面--title
      var getTitle = function getTitle(menu, str) {
        level++;
        menu.map(function (v, k) {
          if (f) return false;
          if (v.url == str) {
            var d = {
              title: v.title,
              url: '#' + v.url
            };
            tmp.push(d);
            f = true;
            data = cloneObj(tmp);
            return data;
          } else {
            var ff = false;
            if (v.subMenu && v.subMenu.length > 0) {
              var _d = {
                title: v.title,
                url: '#' + v.url
              };
              tmp.push(_d);
              ff = true;
              getTitle(v.subMenu, str);
            }
            // console.log(ff);
            if (ff) tmp = [];
          }
        });
        return data;
      };
      return {
        v: getTitle(menu, str)
      };
    }();

    if ((typeof _ret2 === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret2)) === "object") return _ret2.v;
  }
};

// fullscreen
var fs = exports.fs = function fs(element) {
  if (!document.fullscreenElement && /*!document.msFullscreenElement&&!document.mozFullScreenElement&&*/!document.webkitFullscreenElement) {
    if (element.requestFullscreen) {
      element.requestFullscreen();
    } else if (element.msRequestFullscreen) {
      element.msRequestFullscreen();
    } else if (element.mozRequestFullScreen) {
      element.mozRequestFullScreen();
    } else if (element.webkitRequestFullscreen) {
      element.webkitRequestFullscreen();
    }
  } else {
    if (document.exitFullscreen) {
      document.exitFullscreen();
    }
    /*else if(document.msExitFullscreen){
      document.msExitFullscreen();
    }
    else if(document.mozCancelFullScreen){
      document.mozCancelFullScreen();
    }*/
    else if (document.webkitExitFullscreen) {
        document.webkitExitFullscreen();
      }
  }
};
/*let ele=document.getElementsByClassName('fs')[0];
fs(ele);*/

// sort
var ysort = exports.ysort = function ysort(param1, param2) {
  //如果两个参数均为字符串类型
  if (typeof param1 == 'string' && typeof param2 == 'string') {
    return param1.toLowerCase().localeCompare(param2.toLowerCase());
  }
  //如果参数1为数字，参数2为字符串
  if (typeof param1 == 'number' && typeof param2 == 'string') {
    return -1;
  }
  //如果参数1为字符串，参数2为数字
  if (typeof param1 == 'string' && typeof param2 == 'number') {
    return 1;
  }
  //如果两个参数均为数字
  if (typeof param1 == 'number' && typeof param2 == 'number') {
    return param1 - param2;
  }
};

//数组去重
var yunique = exports.yunique = function yunique(arr) {
  var result = [],
      tmp = {};
  for (var i = 0, ele; (ele = arr[i]) != null; i++) {
    if (!tmp[ele]) {
      result.push(ele);
      tmp[ele] = true;
    }
  }
  return result;
};

// loading
var loading = exports.loading = function loading(ele) {
  var hasLoad = document.getElementsByClassName('y-loader')[0];
  if (!hasLoad) {
    var div = document.createElement('div');
    var figure = document.createElement('figure');
    // obj.setAttribute('style','display:block;position:absolute;top:0;left:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1;opacity:0;');
    div.setAttribute('class', 'y-loader');
    figure.setAttribute('class', 'y-loading');
    div.appendChild(figure);

    ele.appendChild(div);
    ele.style.overflow = 'hidden';
  } else {
    ele.removeChild(hasLoad);
    ele.style.overflow = 'visible';
  }

  /*return {
    create:function(){
      ele.appendChild(div);
      ele.style.overflow='hidden';
    },
    remove:function(){
      ele.removeChild(hasLoad);
      ele.style.overflow='visible';
    }
  };*/
};