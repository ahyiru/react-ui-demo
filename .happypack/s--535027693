'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var yresize = exports.yresize = function yresize(element, fn) {
  var rs = {};
  // let window=this;
  var document = window.document;
  var attachEvent = document.attachEvent;
  var isIE = typeof navigator !== 'undefined' ? navigator.userAgent.match(/Trident/) || navigator.userAgent.match(/Edge/) : null;

  var requestFrame = function () {
    var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||
    // window.mozRequestAnimationFrame    ||
    function callbackRAF(callback) {
      return window.setTimeout(callback, 1000 / 60);
    };
    return function requestFrameFunc(func) {
      return raf(func);
    };
  }();
  var cancelFrame = function () {
    var cancel = window.cancelAnimationFrame || window.webkitCancelAnimationFrame ||
    // window.mozCancelAnimationFrame    ||
    window.clearTimeout;
    return function cancelFrameFunc(id) {
      return cancel(id);
    };
  }();

  var resizeListener = function resizeListener(e) {
    var ele = e.target || e.srcElement;
    if (ele.__resizeRAF__) {
      cancelFrame(ele.__resizeRAF__);
    }
    ele.__resizeRAF__ = requestFrame(function () {
      var trigger = ele.__resizeTrigger__;
      if (trigger !== undefined) {
        trigger.__resizeListeners__.forEach(function (func) {
          func.call(trigger, e);
        });
      }
    });
  };

  var objectLoad = function objectLoad() {
    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;
    this.contentDocument.defaultView.addEventListener('resize', resizeListener, false);
  };

  // init
  var resize = function () {
    if (!element.__resizeListeners__) {
      element.__resizeListeners__ = [];
      if (attachEvent) {
        element.__resizeTrigger__ = element;
        element.attachEvent('onresize', resizeListener);
      } else {
        if (getComputedStyle(element).position === 'static') {
          element.style.position = 'relative';
        }
        var obj = element.__resizeTrigger__ = document.createElement('object');
        obj.setAttribute('style', 'display:block;position:absolute;top:0;left:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1;opacity:0;');
        obj.setAttribute('class', 'resize-sensor');
        obj.__resizeElement__ = element;
        obj.onload = objectLoad;
        obj.type = 'text/html';
        if (isIE) {
          element.appendChild(obj);
        }
        obj.data = 'about:blank';
        if (!isIE) {
          element.appendChild(obj);
        }
      }
    }
    element.__resizeListeners__.push(fn);
  }();

  // unbind
  rs.unbind = function () {
    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);
    if (!element.__resizeListeners__.length) {
      if (attachEvent) {
        element.detachEvent('onresize', resizeListener);
      } else {
        element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener, false);
        element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);
      }
    }
  };

  return rs;
};