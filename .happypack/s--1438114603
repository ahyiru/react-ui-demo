'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _index = require('/Users/huyong/Desktop/react-ui-demo/node_modules/.1.3.3@redbox-react/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('/Users/huyong/Desktop/react-ui-demo/node_modules/.1.0.2@react-transform-catch-errors/lib/index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var React = _interopRequireWildcard(_react2);

var _index5 = require('/Users/huyong/Desktop/react-ui-demo/node_modules/.1.0.4@react-transform-hmr/lib/index.js');

var _index6 = _interopRequireDefault(_index5);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  Treedrag: {
    displayName: 'Treedrag'
  }
};

var _UsersHuyongDesktopReactUiDemoNode_modules104ReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: '/Users/huyong/Desktop/react-ui-demo/demo/views/content/form/treeDrag.tsx',
  components: _components,
  locals: [module],
  imports: [React.default]
});

var _UsersHuyongDesktopReactUiDemoNode_modules102ReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: '/Users/huyong/Desktop/react-ui-demo/demo/views/content/form/treeDrag.tsx',
  components: _components,
  locals: [],
  imports: [React.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _UsersHuyongDesktopReactUiDemoNode_modules104ReactTransformHmrLibIndexJs2(_UsersHuyongDesktopReactUiDemoNode_modules102ReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
}

/*import { Tree } from 'antd';

import './treeDrag.less';

import drag from './dragTree';

const TreeNode = Tree.TreeNode;

const x = 3;
const y = 2;
const z = 1;
const tData = [];

const generateData:any = (_level, _preKey, _tns) => {
  const preKey = _preKey || '0';
  const tns = _tns || tData;

  const children = [];
  for (let i = 0; i < x; i++) {
    const key = `${preKey}-${i}`;
    tns.push({ title: key, key });
    if (i < y) {
      children.push(key);
    }
  }
  if (_level < 0) {
    return tns;
  }
  const level = _level - 1;
  children.forEach((key, index) => {
    tns[index].children = [];
    return generateData(level, key, tns[index].children);
  });
};
generateData(z);
*/
var Treedrag = _wrapComponent('Treedrag')(function (_React$Component) {
  (0, _inherits3.default)(Treedrag, _React$Component);

  function Treedrag(props) {
    (0, _classCallCheck3.default)(this, Treedrag);

    /*this.state=({
    	tData:tData,
      expandedKeys:['0-0', '0-0-0', '0-0-0-0']
    });*/
    var _this = (0, _possibleConstructorReturn3.default)(this, (Treedrag.__proto__ || (0, _getPrototypeOf2.default)(Treedrag)).call(this, props));

    _this.componentDidMount = function () {
      // drag.init();
    };

    _this.componentWillUnmount = function () {
      // drag.distroy();
    };

    return _this;
  }

  (0, _createClass3.default)(Treedrag, [{
    key: 'render',


    /*onDragEnter=(info)=>{
      console.log(info);
      // expandedKeys 需要受控时设置
      // this.setState({
      //   expandedKeys: info.expandedKeys,
      // });
    };
    onDrop=(info)=>{
      console.log(info);
      const dropKey = info.node.props.eventKey;
      const dragKey = info.dragNode.props.eventKey;
      // const dragNodesKeys = info.dragNodesKeys;
      const loop = (data, key, callback) => {
        data.forEach((item, index, arr) => {
          if (item.key === key) {
            return callback(item, index, arr);
          }
          if (item.children) {
            return loop(item.children, key, callback);
          }
        });
      };
      const data = [...this.state.gData];
      let dragObj;
      loop(data, dragKey, (item, index, arr) => {
        arr.splice(index, 1);
        dragObj = item;
      });
      if (info.dropToGap) {
        let ar;
        let i;
        loop(data, dropKey, (item, index, arr) => {
          ar = arr;
          i = index;
        });
        ar.splice(i, 0, dragObj);
      } else {
        loop(data, dropKey, (item) => {
          item.children = item.children || [];
          // where to insert 示例添加到尾部，可以是随意位置
          item.children.push(dragObj);
        });
      }
      this.setState({
        gData: data,
      });
    };*/

    value: function render() {
      return React.createElement('div', null);
    }
  }]);
  return Treedrag;
}(React.Component));

exports.default = Treedrag;